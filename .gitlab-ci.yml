variables:
  DOCKER_HOST: tcp://docker:2375

stages:
- build, test & push
#- deploy

#build_and_push:
#  stage: build, test & push
#  image:
#    name: amazon/aws-cli
#    entrypoint: [""]
#  services:
#    - docker:dind
#  before_script:
#    - amazon-linux-extras install docker
#    - aws --version
#    - docker --version
#    - aws ecr get-login-password | docker login --username AWS --password-stdin $DOCKER_REGISTRY
#  script:
#    - docker build -t my-url-shortener .
#    - docker tag my-url-shortener:latest $DOCKER_REGISTRY/my-url-shortener:latest
#    - docker push $DOCKER_REGISTRY/my-url-shortener:latest

test:
  stage: build, test & push
  image: rust:latest
  script:
    - SQLX_OFFLINE=true cargo test

#deploy:
#  stage: deploy
#  before_script:
#    - chmod 400 $SSH_KEY
#  script:
#    - ssh -o StrictHostKeyChecking=no -i $SSH_KEY $USER@$VM_IP "
#      docker ps -aq | xargs -r docker stop | xargs -r docker rm &&
#      docker image ls -q | xargs -r docker image rm &&
#      docker run -d -p 80:7777 -e DATABASE_URL=$DATABASE_URL -e RUSTFLAGS='--cfg #sqlx_macros_unstable' $DOCKER_REGISTRY/my-url-shortener:latest
